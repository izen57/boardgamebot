// <auto-generated />
using System;
using BoardGameBot.Database.PostgreSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BoardGameBot.Database.PostgreSQL.Migrations
{
    [DbContext(typeof(BoardGameContext))]
    [Migration("20220812112107_AddGroupAndPoll")]
    partial class AddGroupAndPoll
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BoardGameBot.Database.PostgreSQL.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Complexity")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LetsPlay")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Played")
                        .HasColumnType("integer");

                    b.Property<string>("Players")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rules")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BoardGameBot.Database.PostgreSQL.Models.GameOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupAdminId")
                        .HasColumnType("integer");

                    b.Property<int>("GroupMemberId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TGRef")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GroupAdminId");

                    b.HasIndex("GroupMemberId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("GameOwners");
                });

            modelBuilder.Entity("BoardGameBot.Database.PostgreSQL.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("BoardGameBot.Database.PostgreSQL.Models.Poll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DayInterval")
                        .HasMaxLength(1)
                        .HasColumnType("integer");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("GameGameOwner", b =>
                {
                    b.Property<int>("GameOwnersId")
                        .HasColumnType("integer");

                    b.Property<int>("GamesId")
                        .HasColumnType("integer");

                    b.HasKey("GameOwnersId", "GamesId");

                    b.HasIndex("GamesId");

                    b.ToTable("GameGameOwner");
                });

            modelBuilder.Entity("BoardGameBot.Database.PostgreSQL.Models.GameOwner", b =>
                {
                    b.HasOne("BoardGameBot.Database.PostgreSQL.Models.Group", "GroupAdmin")
                        .WithMany("Admins")
                        .HasForeignKey("GroupAdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoardGameBot.Database.PostgreSQL.Models.Group", "GroupMember")
                        .WithMany("Members")
                        .HasForeignKey("GroupMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupAdmin");

                    b.Navigation("GroupMember");
                });

            modelBuilder.Entity("BoardGameBot.Database.PostgreSQL.Models.Poll", b =>
                {
                    b.HasOne("BoardGameBot.Database.PostgreSQL.Models.Group", "Group")
                        .WithMany("Polls")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("GameGameOwner", b =>
                {
                    b.HasOne("BoardGameBot.Database.PostgreSQL.Models.GameOwner", null)
                        .WithMany()
                        .HasForeignKey("GameOwnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoardGameBot.Database.PostgreSQL.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BoardGameBot.Database.PostgreSQL.Models.Group", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Members");

                    b.Navigation("Polls");
                });
#pragma warning restore 612, 618
        }
    }
}
